name: pre-commit-config

on:
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize]
    paths:
      - .pre-commit-config.yaml
      - .github/workflows/pre-commit-config.yml
  push:
    branches-ignore:
      - main
    paths:
      - .pre-commit-config.yaml
      - .github/workflows/pre-commit-config.yml

env:
  AWS_DEFAULT_REGION: eu-central-1
  AWS_ROLE_TO_ASSUME: ${{ secrets.AWS_ROLE_TO_ASSUME }}
  SKIP: no-commit-to-branch,terraform_trivy,terraform_validate

permissions: read-all

jobs:
  pre-commit-config-test:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ github.token }}
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Install pre-commit
        run: |
          set -euxo pipefail
          sudo apt install -y git python3-pip python3-setuptools python3-wheel shellcheck
          sudo -H pip3 install checkov pre-commit

      - name: Configure AWS credentials (needed for "detect-aws-credentials")
        uses: aws-actions/configure-aws-credentials@010d0da01d0b5a38af31e9c3470dbfdabdecca3a # v4.0.1
        with:
          role-to-assume: ${{ env.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      - name: Install pre-commit dependecies
        run: |
          set -euxo pipefail
          curl -Ls https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash

          gh release download --repo accurics/terrascan --pattern "*Linux_x86_64.tar.gz" --output terrascan.tar.gz
          tar -xf terrascan.tar.gz -C /usr/local/bin/ terrascan

          gh release download --repo aquasecurity/trivy --pattern "*Linux-64bit.tar.gz" --output trivy.tar.gz
          tar -xf trivy.tar.gz -C /usr/local/bin/ trivy

          gh release download --repo minamijoyo/tfupdate  --pattern "*linux_amd64.tar.gz" --output tfupdate.tar.gz
          tar -xf tfupdate.tar.gz -C /usr/local/bin/ tfupdate

          trivy version
          terrascan version
          tfupdate --version

      - name: Check if all plugins in .pre-commit-config.yaml are in latest version
        run: |
          set -euxo pipefail
          PRE_COMMIT_AUTOUPDATE=$(pre-commit autoupdate || true)
          echo "${PRE_COMMIT_AUTOUPDATE}"
          if [[ "${PRE_COMMIT_AUTOUPDATE}" =~ updating.*-\> ]]; then
            echo "Plugins in .pre-commit-config.yaml are not in latest version !"
            exit 1
          fi

      - name: Run pre-commit tests
        run: |
          set -euxo pipefail
          pre-commit run -a

      - uses: pre-commit/action@646c83fcd040023954eafda54b4db0192ce70507 # v3.0.0
